{
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Spidey API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Spidey API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes RegistrationExtension Registration extension methods"
  },
  "api/Microsoft.Extensions.DependencyInjection.RegistrationExtension.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.RegistrationExtension.html",
    "title": "Class RegistrationExtension | Spidey API Reference",
    "keywords": "Class RegistrationExtension Registration extension methods Inheritance object RegistrationExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.Extensions.DependencyInjection Assembly: Spidey.dll Syntax public static class RegistrationExtension Methods | Improve this Doc View Source RegisterSpidey(ICanisterConfiguration?) Registers the library with the bootstrapper. Declaration public static ICanisterConfiguration? RegisterSpidey(this ICanisterConfiguration? bootstrapper) Parameters Type Name Description ICanisterConfiguration bootstrapper The bootstrapper. Returns Type Description ICanisterConfiguration The bootstrapper"
  },
  "api/Spidey.Crawler.html": {
    "href": "api/Spidey.Crawler.html",
    "title": "Class Crawler | Spidey API Reference",
    "keywords": "Class Crawler Crawler class Inheritance object Crawler Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey Assembly: Spidey.dll Syntax public class Crawler : IDisposable Constructors | Improve this Doc View Source Crawler(Options?) Initializes a new instance of the Crawler class. Declaration public Crawler(Options? options = null) Parameters Type Name Description Options options The options. See Also IDisposable | Improve this Doc View Source Crawler(IEnumerable<IPipeline>, Options?) Initializes a new instance of the Crawler class. Declaration public Crawler(IEnumerable<IPipeline> pipelines, Options? options = null) Parameters Type Name Description IEnumerable<IPipeline> pipelines The pipelines. Options options The options. See Also IDisposable Methods | Improve this Doc View Source Dispose() Disposes of the internal objects Declaration public void Dispose() See Also IDisposable | Improve this Doc View Source Dispose(bool) Disposes the internal objects Declaration protected virtual void Dispose(bool Value) Parameters Type Name Description bool Value See Also IDisposable | Improve this Doc View Source StartCrawlAsync() Starts crawling. Declaration public Task<Results?> StartCrawlAsync() Returns Type Description Task<Results> The listing of each URL and where it was found. See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.DefaultContentParser.html": {
    "href": "api/Spidey.Engines.DefaultContentParser.html",
    "title": "Class DefaultContentParser | Spidey API Reference",
    "keywords": "Class DefaultContentParser Default content parser Inheritance object DefaultContentParser Implements IContentParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultContentParser : IContentParser Constructors | Improve this Doc View Source DefaultContentParser(Options?, IEnumerable<ILinkDiscoverer>, RecyclableMemoryStreamManager, ILogger<DefaultContentParser>?) Initializes a new instance of the DefaultContentParser class. Declaration public DefaultContentParser(Options? options, IEnumerable<ILinkDiscoverer> linkDiscoverers, RecyclableMemoryStreamManager recyclableMemoryStreamManager, ILogger<DefaultContentParser>? logger = null) Parameters Type Name Description Options options The options. IEnumerable<ILinkDiscoverer> linkDiscoverers The link discoverers. RecyclableMemoryStreamManager recyclableMemoryStreamManager The recyclable memory stream manager. ILogger<DefaultContentParser> logger The logger. See Also IContentParser Methods | Improve this Doc View Source Parse(UrlData?) Parses the specified options. Declaration public ResultFile? Parse(UrlData? data) Parameters Type Name Description UrlData data The data. Returns Type Description ResultFile Result file See Also IContentParser Implements IContentParser See Also IContentParser"
  },
  "api/Spidey.Engines.DefaultEngine.html": {
    "href": "api/Spidey.Engines.DefaultEngine.html",
    "title": "Class DefaultEngine | Spidey API Reference",
    "keywords": "Class DefaultEngine Default engine Inheritance object DefaultEngine Implements IEngine IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultEngine : IEngine, IDisposable Constructors | Improve this Doc View Source DefaultEngine(Options?, ILogger<DefaultEngine>?) Initializes a new instance of the DefaultEngine class. Declaration public DefaultEngine(Options? options, ILogger<DefaultEngine>? logger = null) Parameters Type Name Description Options options The options. ILogger<DefaultEngine> logger The logger. See Also IEngine Methods | Improve this Doc View Source CrawlAsync(string) Crawls the url. Declaration public Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> The data from the URL. See Also IEngine | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IEngine Implements IEngine IDisposable See Also IEngine"
  },
  "api/Spidey.Engines.DefaultLinkDiscoverer.html": {
    "href": "api/Spidey.Engines.DefaultLinkDiscoverer.html",
    "title": "Class DefaultLinkDiscoverer | Spidey API Reference",
    "keywords": "Class DefaultLinkDiscoverer Default link engine Inheritance object DefaultLinkDiscoverer Implements ILinkDiscoverer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultLinkDiscoverer : ILinkDiscoverer Constructors | Improve this Doc View Source DefaultLinkDiscoverer(Options?) Initializes a new instance of the DefaultLinkDiscoverer class. Declaration public DefaultLinkDiscoverer(Options? options) Parameters Type Name Description Options options The options. See Also ILinkDiscoverer Methods | Improve this Doc View Source DiscoverUrls(string, string, byte[], string) Discovers the urls. Declaration public string[] DiscoverUrls(string currentDomain, string url, byte[] content, string contentType) Parameters Type Name Description string currentDomain The current domain. string url The URL. byte[] content The content. string contentType Type of the content. Returns Type Description string[] The links within the document. See Also ILinkDiscoverer | Improve this Doc View Source FixUrl(string, string?, Dictionary<Regex, string>) Fixes the URL. Declaration public string FixUrl(string currentDomain, string? link, Dictionary<Regex, string> replacements) Parameters Type Name Description string currentDomain The current domain. string link The link. Dictionary<Regex, string> replacements The replacements. Returns Type Description string The fixed URL See Also ILinkDiscoverer | Improve this Doc View Source GetDomain(string) Gets the domain. Declaration public string GetDomain(string url) Parameters Type Name Description string url The URL. Returns Type Description string The domain of the url. See Also ILinkDiscoverer Implements ILinkDiscoverer See Also ILinkDiscoverer"
  },
  "api/Spidey.Engines.DefaultPipeline.html": {
    "href": "api/Spidey.Engines.DefaultPipeline.html",
    "title": "Class DefaultPipeline | Spidey API Reference",
    "keywords": "Class DefaultPipeline Default pipeline Inheritance object DefaultPipeline Implements IPipeline IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultPipeline : IPipeline, IDisposable Constructors | Improve this Doc View Source DefaultPipeline(IEnumerable<IScheduler>, IEnumerable<IProcessor>, IEnumerable<IContentParser>, IEnumerable<ILinkDiscoverer>, Options?, ILogger<DefaultPipeline>?) Initializes a new instance of the DefaultPipeline class. Declaration public DefaultPipeline(IEnumerable<IScheduler> schedulers, IEnumerable<IProcessor> processors, IEnumerable<IContentParser> parsers, IEnumerable<ILinkDiscoverer> linkDiscoverers, Options? options, ILogger<DefaultPipeline>? logger = null) Parameters Type Name Description IEnumerable<IScheduler> schedulers The schedulers. IEnumerable<IProcessor> processors The processors. IEnumerable<IContentParser> parsers The parsers. IEnumerable<ILinkDiscoverer> linkDiscoverers The link discoverers. Options options The options. ILogger<DefaultPipeline> logger The logger. See Also IPipeline Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IPipeline | Improve this Doc View Source StartCrawlAsync() Starts the crawl asynchronous. Declaration public Task<Results?> StartCrawlAsync() Returns Type Description Task<Results> The results from the crawl. See Also IPipeline Implements IPipeline IDisposable See Also IPipeline"
  },
  "api/Spidey.Engines.DefaultProcessor.html": {
    "href": "api/Spidey.Engines.DefaultProcessor.html",
    "title": "Class DefaultProcessor | Spidey API Reference",
    "keywords": "Class DefaultProcessor Default processor Inheritance object DefaultProcessor Implements IProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultProcessor : IProcessor Constructors | Improve this Doc View Source DefaultProcessor(Options?, ILogger<DefaultProcessor>?) Initializes a new instance of the DefaultProcessor class. Declaration public DefaultProcessor(Options? options, ILogger<DefaultProcessor>? logger = null) Parameters Type Name Description Options options The options. ILogger<DefaultProcessor> logger The logger. See Also IProcessor Methods | Improve this Doc View Source Process(ResultFile) Processes the item found. Declaration public void Process(ResultFile resultFile) Parameters Type Name Description ResultFile resultFile The result file. See Also IProcessor Implements IProcessor See Also IProcessor"
  },
  "api/Spidey.Engines.DefaultScheduler.html": {
    "href": "api/Spidey.Engines.DefaultScheduler.html",
    "title": "Class DefaultScheduler | Spidey API Reference",
    "keywords": "Class DefaultScheduler Default scheduler Inheritance object DefaultScheduler Implements IScheduler IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class DefaultScheduler : IScheduler, IDisposable Constructors | Improve this Doc View Source DefaultScheduler(Options?, IEnumerable<IEngine>, ILogger<DefaultScheduler>?) Initializes a new instance of the DefaultScheduler class. Declaration public DefaultScheduler(Options? options, IEnumerable<IEngine> engines, ILogger<DefaultScheduler>? logger = null) Parameters Type Name Description Options options The options. IEnumerable<IEngine> engines The engines. ILogger<DefaultScheduler> logger The logger. See Also IScheduler Methods | Improve this Doc View Source CrawlAsync(string) Schedules the specified URL for crawling. Declaration public Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> This. See Also IScheduler | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IScheduler Implements IScheduler IDisposable See Also IScheduler"
  },
  "api/Spidey.Engines.html": {
    "href": "api/Spidey.Engines.html",
    "title": "Namespace Spidey.Engines | Spidey API Reference",
    "keywords": "Namespace Spidey.Engines Classes DefaultContentParser Default content parser DefaultEngine Default engine DefaultLinkDiscoverer Default link engine DefaultPipeline Default pipeline DefaultProcessor Default processor DefaultScheduler Default scheduler UrlData URL data passed back from the engine."
  },
  "api/Spidey.Engines.Interfaces.html": {
    "href": "api/Spidey.Engines.Interfaces.html",
    "title": "Namespace Spidey.Engines.Interfaces | Spidey API Reference",
    "keywords": "Namespace Spidey.Engines.Interfaces Interfaces IContentParser Content parser interface IEngine Engine interface ILinkDiscoverer Link engine interface IPipeline Pipeline interface IProcessor Processor interface IScheduler Schedules the individual URLs to the workers."
  },
  "api/Spidey.Engines.Interfaces.IContentParser.html": {
    "href": "api/Spidey.Engines.Interfaces.IContentParser.html",
    "title": "Interface IContentParser | Spidey API Reference",
    "keywords": "Interface IContentParser Content parser interface Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface IContentParser Methods | Improve this Doc View Source Parse(UrlData?) Parses the specified options. Declaration ResultFile? Parse(UrlData? data) Parameters Type Name Description UrlData data The data. Returns Type Description ResultFile Result file"
  },
  "api/Spidey.Engines.Interfaces.IEngine.html": {
    "href": "api/Spidey.Engines.Interfaces.IEngine.html",
    "title": "Interface IEngine | Spidey API Reference",
    "keywords": "Interface IEngine Engine interface Inherited Members IDisposable.Dispose() Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface IEngine : IDisposable Methods | Improve this Doc View Source CrawlAsync(string) Crawls the specified URL. Declaration Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> The data from the url. See Also IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.Interfaces.ILinkDiscoverer.html": {
    "href": "api/Spidey.Engines.Interfaces.ILinkDiscoverer.html",
    "title": "Interface ILinkDiscoverer | Spidey API Reference",
    "keywords": "Interface ILinkDiscoverer Link engine interface Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface ILinkDiscoverer Methods | Improve this Doc View Source DiscoverUrls(string, string, byte[], string) Discovers the urls. Declaration string[] DiscoverUrls(string currentDomain, string url, byte[] content, string contentType) Parameters Type Name Description string currentDomain The current domain. string url The URL. byte[] content The content. string contentType Type of the content. Returns Type Description string[] The links within the document. | Improve this Doc View Source FixUrl(string, string, Dictionary<Regex, string>) Fixes the URL. Declaration string FixUrl(string currentDomain, string link, Dictionary<Regex, string> replacements) Parameters Type Name Description string currentDomain The current domain. string link The link. Dictionary<Regex, string> replacements The replacements. Returns Type Description string Fixed URL | Improve this Doc View Source GetDomain(string) Gets the domain. Declaration string GetDomain(string url) Parameters Type Name Description string url The URL. Returns Type Description string The domain of the url."
  },
  "api/Spidey.Engines.Interfaces.IPipeline.html": {
    "href": "api/Spidey.Engines.Interfaces.IPipeline.html",
    "title": "Interface IPipeline | Spidey API Reference",
    "keywords": "Interface IPipeline Pipeline interface Inherited Members IDisposable.Dispose() Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface IPipeline : IDisposable Methods | Improve this Doc View Source StartCrawlAsync() Starts the crawl asynchronous. Declaration Task<Results?> StartCrawlAsync() Returns Type Description Task<Results> The results from the crawl. See Also IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.Interfaces.IProcessor.html": {
    "href": "api/Spidey.Engines.Interfaces.IProcessor.html",
    "title": "Interface IProcessor | Spidey API Reference",
    "keywords": "Interface IProcessor Processor interface Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface IProcessor Methods | Improve this Doc View Source Process(ResultFile) Processes the item found. Declaration void Process(ResultFile resultFile) Parameters Type Name Description ResultFile resultFile The result file."
  },
  "api/Spidey.Engines.Interfaces.IScheduler.html": {
    "href": "api/Spidey.Engines.Interfaces.IScheduler.html",
    "title": "Interface IScheduler | Spidey API Reference",
    "keywords": "Interface IScheduler Schedules the individual URLs to the workers. Inherited Members IDisposable.Dispose() Namespace: Spidey.Engines.Interfaces Assembly: Spidey.dll Syntax public interface IScheduler : IDisposable Methods | Improve this Doc View Source CrawlAsync(string) Schedules the specified URL for crawling. Declaration Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> See Also IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.Scheduler.html": {
    "href": "api/Spidey.Engines.Scheduler.html",
    "title": "Namespace Spidey.Engines.Scheduler | Spidey API Reference",
    "keywords": "Namespace Spidey.Engines.Scheduler Classes Worker Worker class WorkerPool Worker pool"
  },
  "api/Spidey.Engines.Scheduler.Worker.html": {
    "href": "api/Spidey.Engines.Scheduler.Worker.html",
    "title": "Class Worker | Spidey API Reference",
    "keywords": "Class Worker Worker class Inheritance object Worker Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines.Scheduler Assembly: Spidey.dll Syntax public class Worker : IDisposable Constructors | Improve this Doc View Source Worker(IEngine) Initializes a new instance of the Worker class. Declaration public Worker(IEngine engine) Parameters Type Name Description IEngine engine The engine. See Also IDisposable Properties | Improve this Doc View Source CurrentTask Gets or sets the current task. Declaration public Task CurrentTask { get; } Property Value Type Description Task The current task. See Also IDisposable | Improve this Doc View Source Done Gets a value indicating whether this Worker is done. Declaration public bool Done { get; } Property Value Type Description bool true if done; otherwise, false. See Also IDisposable Methods | Improve this Doc View Source CrawlAsync(string) Crawls the url asynchronously. Declaration public Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> The url data. See Also IDisposable | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.Scheduler.WorkerPool.html": {
    "href": "api/Spidey.Engines.Scheduler.WorkerPool.html",
    "title": "Class WorkerPool | Spidey API Reference",
    "keywords": "Class WorkerPool Worker pool Inheritance object WorkerPool Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines.Scheduler Assembly: Spidey.dll Syntax public class WorkerPool : IDisposable Constructors | Improve this Doc View Source WorkerPool(int, IEngine, CancellationToken) Initializes a new instance of the WorkerPool class. Declaration public WorkerPool(int workerCount, IEngine engine, CancellationToken cancellationToken) Parameters Type Name Description int workerCount The worker count. IEngine engine The engine. CancellationToken cancellationToken The cancellation token. See Also IDisposable Properties | Improve this Doc View Source Done Gets a value indicating whether this WorkerPool is done. Declaration public bool Done { get; } Property Value Type Description bool true if done; otherwise, false. See Also IDisposable | Improve this Doc View Source IsCanceled Gets a value indicating whether this instance is canceled. Declaration public bool IsCanceled { get; } Property Value Type Description bool true if this instance is canceled; otherwise, false. See Also IDisposable Methods | Improve this Doc View Source CrawlAsync(string) Processes the request. Declaration public Task<UrlData?> CrawlAsync(string url) Parameters Type Name Description string url The URL. Returns Type Description Task<UrlData> Task. See Also IDisposable | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/Spidey.Engines.UrlData.html": {
    "href": "api/Spidey.Engines.UrlData.html",
    "title": "Class UrlData | Spidey API Reference",
    "keywords": "Class UrlData URL data passed back from the engine. Inheritance object UrlData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Engines Assembly: Spidey.dll Syntax public class UrlData Constructors | Improve this Doc View Source UrlData(byte[], string, string, string, int, string) Initializes a new instance of the UrlData class. Declaration public UrlData(byte[] content, string contentType, string fileName, string finalLocation, int statusCode, string uRL) Parameters Type Name Description byte[] content The content. string contentType Type of the content. string fileName Name of the file. string finalLocation The final location. int statusCode The status code. string uRL The u rl. Properties | Improve this Doc View Source Content Gets or sets the content. Declaration public byte[] Content { get; set; } Property Value Type Description byte[] The content. | Improve this Doc View Source ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description string The type of the content. | Improve this Doc View Source FileName Gets or sets the name of the file. Declaration public string FileName { get; set; } Property Value Type Description string The name of the file. | Improve this Doc View Source FinalLocation Gets or sets the final location. Declaration public string FinalLocation { get; set; } Property Value Type Description string The final location. | Improve this Doc View Source StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description int The status code. | Improve this Doc View Source URL Gets or sets the URL. Declaration public string URL { get; set; } Property Value Type Description string The URL."
  },
  "api/Spidey.ErrorItem.html": {
    "href": "api/Spidey.ErrorItem.html",
    "title": "Class ErrorItem | Spidey API Reference",
    "keywords": "Class ErrorItem Error item data holder. Inheritance object ErrorItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey Assembly: Spidey.dll Syntax public class ErrorItem Constructors | Improve this Doc View Source ErrorItem(Exception, string, int) Initializes a new instance of the ErrorItem class. Declaration public ErrorItem(Exception error, string url, int statusCode) Parameters Type Name Description Exception error The error. string url The URL. int statusCode The status code. Properties | Improve this Doc View Source Error Gets or sets the error. Declaration public Exception Error { get; set; } Property Value Type Description Exception The error. | Improve this Doc View Source StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description int The status code. | Improve this Doc View Source Url Gets or sets the URL. Declaration public string Url { get; set; } Property Value Type Description string The URL."
  },
  "api/Spidey.html": {
    "href": "api/Spidey.html",
    "title": "Namespace Spidey | Spidey API Reference",
    "keywords": "Namespace Spidey Classes Crawler Crawler class ErrorItem Error item data holder. Options Basic options class ResultFile Result file Results Results from the crawl"
  },
  "api/Spidey.Modules.html": {
    "href": "api/Spidey.Modules.html",
    "title": "Namespace Spidey.Modules | Spidey API Reference",
    "keywords": "Namespace Spidey.Modules Classes SpideyModule Spidey module"
  },
  "api/Spidey.Modules.SpideyModule.html": {
    "href": "api/Spidey.Modules.SpideyModule.html",
    "title": "Class SpideyModule | Spidey API Reference",
    "keywords": "Class SpideyModule Spidey module Inheritance object SpideyModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey.Modules Assembly: Spidey.dll Syntax public class SpideyModule : IModule Properties | Improve this Doc View Source Order Order to run it in Declaration public int Order { get; } Property Value Type Description int See Also IModule Methods | Improve this Doc View Source Load(IServiceCollection?) Loads the module Declaration public void Load(IServiceCollection? bootstrapper) Parameters Type Name Description IServiceCollection bootstrapper The bootstrapper. See Also IModule Implements IModule See Also IModule"
  },
  "api/Spidey.Options.html": {
    "href": "api/Spidey.Options.html",
    "title": "Class Options | Spidey API Reference",
    "keywords": "Class Options Basic options class Inheritance object Options Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey Assembly: Spidey.dll Syntax public class Options Properties | Improve this Doc View Source Allow Gets or sets the allowed items. Declaration public List<string> Allow { get; set; } Property Value Type Description List<string> The allowed items. | Improve this Doc View Source Credentials Gets the credentials. Declaration public NetworkCredential? Credentials { get; set; } Property Value Type Description NetworkCredential The credentials. | Improve this Doc View Source Default Gets the default. Declaration public static Options Default { get; } Property Value Type Description Options The default. | Improve this Doc View Source FollowOnly Gets or sets the follow only list. Declaration public List<string> FollowOnly { get; set; } Property Value Type Description List<string> The follow only list. | Improve this Doc View Source Ignore Gets or sets the ignore list. Declaration public List<string> Ignore { get; set; } Property Value Type Description List<string> The ignore list. | Improve this Doc View Source ItemFound Gets or sets the item found. Declaration public Action<ResultFile> ItemFound { get; set; } Property Value Type Description Action<ResultFile> The item found. | Improve this Doc View Source MaxDelay Gets or sets the maximum delay. Declaration public int MaxDelay { get; set; } Property Value Type Description int The maximum delay. | Improve this Doc View Source MinDelay Gets or sets the minimum delay. Declaration public int MinDelay { get; set; } Property Value Type Description int The minimum delay. | Improve this Doc View Source NumberWorkers Gets or sets the number workers. Declaration public int NumberWorkers { get; set; } Property Value Type Description int The number workers. | Improve this Doc View Source Proxy Gets the proxy. Declaration public IWebProxy? Proxy { get; set; } Property Value Type Description IWebProxy The proxy. | Improve this Doc View Source StartLocations Gets or sets the start locations. Declaration public List<string> StartLocations { get; set; } Property Value Type Description List<string> The start locations. | Improve this Doc View Source UrlReplacements Gets or sets a list of replacements for URL parts. Key is the url part that you may find, value is the replacement for it. Declaration public Dictionary<string, string> UrlReplacements { get; set; } Property Value Type Description Dictionary<string, string> The domain replacements. | Improve this Doc View Source UseDefaultCredentials Gets or sets a value indicating whether [use default credentials]. Declaration public bool UseDefaultCredentials { get; set; } Property Value Type Description bool true if [use default credentials]; otherwise, false."
  },
  "api/Spidey.ResultFile.html": {
    "href": "api/Spidey.ResultFile.html",
    "title": "Class ResultFile | Spidey API Reference",
    "keywords": "Class ResultFile Result file Inheritance object ResultFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey Assembly: Spidey.dll Syntax public class ResultFile Constructors | Improve this Doc View Source ResultFile(string, UrlData, IGenericFile, string, string, string, int) Initializes a new instance of the ResultFile class. Declaration public ResultFile(string contentType, UrlData data, IGenericFile fileContent, string fileName, string finalLocation, string location, int statusCode) Parameters Type Name Description string contentType Type of the content. UrlData data The data. IGenericFile fileContent Content of the file. string fileName Name of the file. string finalLocation The final location. string location The location. int statusCode The status code. Properties | Improve this Doc View Source ContentType Gets or sets the type of the content. Declaration public string ContentType { get; set; } Property Value Type Description string The type of the content. | Improve this Doc View Source Data Gets or sets the data. Declaration public UrlData Data { get; set; } Property Value Type Description UrlData The data. | Improve this Doc View Source FileContent Gets or sets the file. Declaration public IGenericFile FileContent { get; set; } Property Value Type Description IGenericFile The file. | Improve this Doc View Source FileName Gets or sets the name of the file if this is something downloaded. Declaration public string FileName { get; set; } Property Value Type Description string The name of the file if this is something downloaded. | Improve this Doc View Source FinalLocation Gets or sets the final location (if page is redirected, this will be different than location). Declaration public string FinalLocation { get; set; } Property Value Type Description string The final location. | Improve this Doc View Source Location Gets the file location. Declaration public string Location { get; set; } Property Value Type Description string The file location. | Improve this Doc View Source StatusCode Gets or sets the status code. Declaration public int StatusCode { get; set; } Property Value Type Description int The status code."
  },
  "api/Spidey.Results.html": {
    "href": "api/Spidey.Results.html",
    "title": "Class Results | Spidey API Reference",
    "keywords": "Class Results Results from the crawl Inheritance object Results Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Spidey Assembly: Spidey.dll Syntax public class Results Properties | Improve this Doc View Source CompletedURLs Gets or sets the completed urls. Declaration public ConcurrentBag<string> CompletedURLs { get; } Property Value Type Description ConcurrentBag<string> The completed urls. | Improve this Doc View Source ErrorURLs Gets or sets the error ur ls. Declaration public ConcurrentBag<ErrorItem> ErrorURLs { get; } Property Value Type Description ConcurrentBag<ErrorItem> The error ur ls. | Improve this Doc View Source WhereFound Gets or sets the where found. Declaration public ListMapping<string, string> WhereFound { get; } Property Value Type Description ListMapping<string, string> The where found."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Spidey API Reference",
    "keywords": "Code using BigBook; using Microsoft.Extensions.DependencyInjection; namespace Spidey.Example { /// <summary> /// Example program for Spidey /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static async Task Main(string[] args) { // We need to setup the service provider var Services = new ServiceCollection() // We need to first add the crawler and subsequent dependencies .AddCanisterModules() // And add our options ?.AddSingleton(new Options { // We want to allow these locations to be crawled Allow = { \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\" }, // We want to use these credentials for authentication against the server Credentials = new System.Net.NetworkCredential(\"username\", \"password\"), // We want to ignore these locations Ignore = { \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\" }, // When we find a new item, we want to print the filename to the console ItemFound = x => System.Console.WriteLine(x.FileName), // The maximum delay between requests MaxDelay = 1000, // The minimum delay between requests MinDelay = 100, // We want to start our crawl from these locations StartLocations = { \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\" }, // We want to use a proxy server at http://localhost:8888 Proxy = new System.Net.WebProxy(\"http://localhost:8888\"), // We want to use 4 workers NumberWorkers = 4, // We don't want to use the default credentials UseDefaultCredentials = false }) ?.BuildServiceProvider(); if (Services is null) return; // Let's start by creating a crawler var Crawler = Services.GetRequiredService<Crawler>(); // Now we can start the crawl var Results = await Crawler.StartCrawlAsync().ConfigureAwait(false); if (Results is null) return; // We can see the urls that were crawled Console.WriteLine(\"Found the following URLs:\"); Console.WriteLine(Results.CompletedURLs.ToString(x => x, \"\\n\")); // We can also see where the urls were found Console.WriteLine(\"The following URLs were discovered from these locations:\"); Console.WriteLine(Results.WhereFound.ToString(x => $\"{x.Key}: {x.Value.ToString(y => y)}\", \"\\n\")); // And the urls that had errors Console.WriteLine(\"And the following URLs had errors:\"); Console.WriteLine(Results.ErrorURLs.ToString(x => $\"{x.Url} ({x.StatusCode}): {x.Error}\", \"\\n\")); } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Spidey | Spidey API Reference",
    "keywords": "Spidey Library to help with crawling web content. Compatible with .Net Core and .Net Framework. Setting up the Library Spidey relies on Canister in order to hook itself up. In order for this to work, you must do the following at startup: new ServiceCollection().AddCanisterModules(); The AddCanisterModules function is an extension method that registers it with the IoC container. When this is done, Spidey is ready to use. Basic Usage Spidey really boils down to using one class called Crawler: ServiceCollection.AddSingleton(new Options { ItemFound = FoundFile=>{} //The callback method used when a new page is discovered. Allow = new List<string> { \"http://mywebsite\", \"http://mywebsite2\" }, //Regexes of what sites/pages are allowed to be crawled. FollowOnly = new List<string> { \"...\" }, //Regexes of pages to only follow links that are found on them. Ignore = new List<string> { \"...\" }, //Regexes that the system will ignore when they are encountered. StartLocations = new List<string> { \"http://mywebsite\", \"http://mywebsite2\" }, //Starting URLs for the crawler. UrlReplacements = new Dictionary<string,string> {...} //When the system hits one of the keys in the dictionary, it will replace it with the value. }); Note that it is recommended that you actually register the Options object in your ServiceCollection and resolve the Crawler object from the service provider but it is not required. You can simply new up an instance of Crawler if you want. Anyway, the Options class has a number of properties, some of which are not displayed above such as NetworkCredentials, UseDefaultCredentials, and Proxy. The callback method is what will be called by the system once a link's info has been received and looks like this: void CallbackMethod(ResultFile obj) { ... } The library will handle parsing of links found within the page, downloading the content, etc. for the most part. At this point all you have to do is call the StartCrawl method: MyCrawler.StartCrawl(); Customization Note that it's possible to customize the crawler's various parts. The system is divided into the following sections: Content Parser (IContentParser) - This parses the resulting data and converts it to the ResultFile object. Engine (IEngine) - This downloads the content from the server. Link Discoverer (ILinkDiscoverer) - Takes the content from the engine and looks for links to other resources. Processor (IProcessor) - Takes the parsed content and hands it off to your code. The default one simply calls the method provided in the options. Scheduler (IScheduler) - Handles handing out work to the various workers. Pipeline (IPipeline) - Manages the various parts of the process by feeding the content to the next bit of the process. These subsystems all implement interfaces found in the Spidey.Engines.Interfaces namespace. In order to replace the default in any of these systems all you need to do is create a class that implements the interface that you want to replace. After that the system will automatically pick it up if resolved from the service provider. If you, instead, new up a Crawler object then you will need to compose the Pipeline object. Installation The library is available via Nuget with the package name \"Spidey\". To install it run the following command in the Package Manager Console: Install-Package Spidey FAQ Is it possible to run the crawler using multiple nodes? The default scheduler assumes that you are only running the crawler from one location and doesn't talk to other instances of the application. But it is possible to replace the scheduler with one that will talk via some mechanism like a database to coordinate work between instances and is recommended for more complex setups. Build Process In order to build the library you will require the following: Visual Studio 2019 Other than that, just clone the project and you should be able to load the solution and build without too much effort."
  }
}